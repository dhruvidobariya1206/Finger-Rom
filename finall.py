# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'every.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from subprocess import call
from PyQt5.QtCore import QProcess
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.p = None
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.index_live = QtWidgets.QPushButton(self.centralwidget)
        self.index_live.setGeometry(QtCore.QRect(110, 180, 89, 25))
        self.index_live.setObjectName("index_live")

        self.mddle_live = QtWidgets.QPushButton(self.centralwidget)
        self.mddle_live.setGeometry(QtCore.QRect(110, 250, 89, 25))
        self.mddle_live.setObjectName("mddle_live")

        self.ring_live = QtWidgets.QPushButton(self.centralwidget)
        self.ring_live.setGeometry(QtCore.QRect(110, 320, 89, 25))
        self.ring_live.setObjectName("ring_live")

        self.little_live = QtWidgets.QPushButton(self.centralwidget)
        self.little_live.setGeometry(QtCore.QRect(110, 380, 89, 25))
        self.little_live.setObjectName("little_live")
        
        self.thumb_live = QtWidgets.QPushButton(self.centralwidget)
        self.thumb_live.setGeometry(QtCore.QRect(110, 440, 89, 25))
        self.thumb_live.setObjectName("thumb_live")


        self.index_regi = QtWidgets.QPushButton(self.centralwidget)
        self.index_regi.setGeometry(QtCore.QRect(490, 180, 89, 25))
        self.index_regi.setObjectName("index_regi")

        self.middle_regi = QtWidgets.QPushButton(self.centralwidget)
        self.middle_regi.setGeometry(QtCore.QRect(490, 250, 89, 25))
        self.middle_regi.setObjectName("middle_regi")

        self.ring_regi = QtWidgets.QPushButton(self.centralwidget)
        self.ring_regi.setGeometry(QtCore.QRect(490, 320, 89, 25))
        self.ring_regi.setObjectName("ring_regi")

        self.little_regi = QtWidgets.QPushButton(self.centralwidget)
        self.little_regi.setGeometry(QtCore.QRect(490, 380, 89, 25))
        self.little_regi.setObjectName("little_regi")

        self.thumb_regi = QtWidgets.QPushButton(self.centralwidget)
        self.thumb_regi.setGeometry(QtCore.QRect(490, 440, 89, 25))
        self.thumb_regi.setObjectName("thumb_regi")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 130, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(490, 120, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(90, 10, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(110, 50, 113, 25))
        self.lineEdit.setObjectName("lineEdit")
        self.save_name = QtWidgets.QPushButton(self.centralwidget)
        self.save_name.setGeometry(QtCore.QRect(120, 90, 89, 25))
        self.save_name.setObjectName("save_name")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(440, 10, 240, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.photo = QtWidgets.QPushButton(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(500, 70, 89, 25))
        self.photo.setObjectName("photo")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.save_name.clicked.connect(self.show_line)
        self.photo.clicked.connect(self.open_cv)
        self.index_live.pressed.connect(self.index_live_process)
        self.mddle_live.pressed.connect(self.middle_live_process)
        self.ring_live.pressed.connect(self.ring_live_process)
        self.little_live.pressed.connect(self.little_live_process)
        self.thumb_live.pressed.connect(self.thumb_live_process)
        self.index_regi.pressed.connect(self.index_regi_process)
        self.middle_regi.pressed.connect(self.middle_regi_process)
        self.ring_regi.pressed.connect(self.ring_regi_process)
        self.little_regi.pressed.connect(self.little_regi_process)
        self.thumb_regi.pressed.connect(self.thumb_regi_process)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def show_line(self):
        global namee 
        namee = self.lineEdit.text()

    def open_cv(self):
        if self.p is None:  # No process running.
            call(["python3",'save_image_opencv.py',f"{namee}"])

    def index_live_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_live.py'])
    def middle_live_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_middle_live.py'])
    def ring_live_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_ring_live.py'])
    def little_live_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_little_live.py'])
    def thumb_live_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_thumb_live.py'])
    def index_regi_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_index_regi.py'])
    def middle_regi_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_middle_regi.py'])
    def ring_regi_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_ring_regi.py'])
    # def start_process2(self):
    #     if self.p is None:  # No process running.
    #         # self.message("Executing process")
    #         self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
    #         self.p.finished.connect(self.process_finished)  # Clean up once complete.
    #         self.p.start("python3", ['fing_rom3.py'])
    def little_regi_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_little_regi.py'])
    def thumb_regi_process(self):
        if self.p is None:  # No process running.
            # self.message("Executing process")
            self.p = QProcess()  # Keep a reference to the QProcess (e.g. on self) while it's running.
            self.p.finished.connect(self.process_finished)  # Clean up once complete.
            self.p.start("python3", ['fing_rom_thumb_regi.py'])
    def process_finished(self):
        # self.message("Process finished.")
        self.p = None

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.index_live.setText(_translate("MainWindow", "index"))
        self.mddle_live.setText(_translate("MainWindow", "middle"))
        self.ring_live.setText(_translate("MainWindow", "ring"))
        self.little_live.setText(_translate("MainWindow", "little"))
        self.thumb_live.setText(_translate("MainWindow", "thumb"))
        self.index_regi.setText(_translate("MainWindow", "index"))
        self.middle_regi.setText(_translate("MainWindow", "middle"))
        self.ring_regi.setText(_translate("MainWindow", "ring"))
        self.little_regi.setText(_translate("MainWindow", "little"))
        self.thumb_regi.setText(_translate("MainWindow", "thumb"))
        self.label.setText(_translate("MainWindow", "live angles"))
        self.label_2.setText(_translate("MainWindow", "Register"))
        self.label_3.setText(_translate("MainWindow", "enter name below"))
        self.save_name.setText(_translate("MainWindow", "save name"))
        self.label_4.setText(_translate("MainWindow", "click below to add photo"))
        self.photo.setText(_translate("MainWindow", "take photo"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
